{"version":3,"sources":["Components/SlotMachine.jsx","Components/Header.jsx","Components/Login.jsx","Components/blackjack/Card.jsx","Components/blackjack/Backcard.jsx","Components/blackjack/Dealer.jsx","Components/blackjack/Player.jsx","Components/blackjack/Blackjack.jsx","Components/Roulette.jsx","Components/Menu.jsx","App.js","serviceWorker.js","index.js"],"names":["SlotMachine","props","useState","bet","setBet","display","setDisplay","sleep","milliseconds","Promise","resolve","setTimeout","checkWin","goHandler","getBalance","document","getElementById","innerHTML","newBalance","parseInt","setBalance","toString","Running","disp1","disp2","disp3","then","className","id","onClick","Header","user","name","balance","Login","username","setUsername","password","setPassword","type","placeholder","onChange","event","target","value","LogInHandler","href","RegisterHandler","Card","src","image","Backcard","Dealer","cardsD","map","result","length","key","code","Player","cardsP","Blackjack","endpoint","deck","setDeck","setCardsP","valueP","setValueP","setCardsD","valueD","setValueD","setStatus","softTokenD","setSoftTokenD","softTokenP","setSoftTokenP","foldFalg","setFoldFlag","remaining","setRemaining","drawCard","axios","get","deck_id","response","data","cards","hand","push","check","tmpD","tmpP","dValue","pValue","card","val","Number","softChecker","console","log","win_lose_check","gen_deck","Roulette","count","setCount","tmp","Math","floor","random","spin","Menu","game","setGame","class","addBalanceHandler","LogOutHandler","App","usersData","setUsersData","token","setToken","undefined","currentUser","setCurrentUser","find","elememt","alert","width","height","frameborder","allow","allowfullscreen","Username","Password","newData","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2518dd60.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\nimport \"./Styles/SlotMachine.css\"\r\n\r\n\r\nconst SlotMachine = props =>{\r\n    const RunningMSG = \"RUNNING\";\r\n    const Remaining1MSG = \"1 LEFT\";\r\n    const Remaining2MSG = \"2 LEFT\";\r\n    const StopedMSG = \"STOPPED\";\r\n    const delay = 100;\r\n\r\n    const [bet,setBet] = useState(5);\r\n\r\n    const [display,setDisplay] = useState([0,0,0])\r\n\r\n    const sleep = (milliseconds) => {\r\n        return new Promise(resolve => setTimeout(resolve, milliseconds))\r\n    }\r\n\r\n    const Running = () =>{\r\n        let disp1;\r\n        let disp2;\r\n        let disp3 ;\r\n        if(document.getElementById(\"StatusDisplay\").innerHTML === RunningMSG){\r\n            sleep(delay).then(() => {\r\n                    disp1 = display[0]++;\r\n                    disp2 = display[1]++;\r\n                    disp3 = display[2]++;\r\n                    setDisplay([disp1,disp2,disp3]);\r\n                    Running();\r\n                }      \r\n              )\r\n            }else if(document.getElementById(\"StatusDisplay\").innerHTML === Remaining2MSG){\r\n                sleep(delay).then(() => {\r\n                    disp2 = display[1]++;\r\n                    disp3 = display[2]++;\r\n                    setDisplay([display[0],disp2,disp3]);\r\n                    Running();\r\n                }      \r\n              )\r\n    \r\n            }else if(document.getElementById(\"StatusDisplay\").innerHTML === Remaining1MSG){\r\n                sleep(delay).then(() => {\r\n                    disp3 = display[2]++;\r\n                    setDisplay([display[0],display[1],disp3]);\r\n                    Running();\r\n                }      \r\n              )\r\n            }else if(document.getElementById(\"StatusDisplay\").innerHTML == StopedMSG){\r\n                //end game\r\n                sleep(delay).then(() => {\r\n                    setDisplay([display[0],display[1],display[2]]);\r\n\r\n                    if(checkWin() === 1){\r\n                        const newBalance = parseInt( props.getBalance()) + bet * 4;\r\n                        props.setBalance(newBalance.toString());\r\n                    }\r\n                });\r\n            }\r\n    }\r\n\r\n    const checkWin = () =>{\r\n        if((display[0]%5) === (display[1]%5) && (display[0]%5) === (display[2]%5)){\r\n            return(1);\r\n        }else{\r\n            return(0);\r\n        }\r\n    }\r\n\r\n    const goHandler = () =>{\r\n        if(props.getBalance() >= bet){\r\n            if(document.getElementById(\"StatusDisplay\").innerHTML === StopedMSG){\r\n                const newBalance = parseInt( props.getBalance()) - bet ;\r\n                props.setBalance(newBalance.toString());\r\n                document.getElementById(\"StatusDisplay\").innerHTML = RunningMSG;\r\n                Running();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const stopHandler =()=>{\r\n        if(document.getElementById(\"StatusDisplay\").innerHTML === RunningMSG){\r\n            document.getElementById(\"StatusDisplay\").innerHTML = Remaining2MSG;\r\n        }else if(document.getElementById(\"StatusDisplay\").innerHTML === Remaining2MSG){\r\n            document.getElementById(\"StatusDisplay\").innerHTML = Remaining1MSG;\r\n        } else if(document.getElementById(\"StatusDisplay\").innerHTML === Remaining1MSG){\r\n            document.getElementById(\"StatusDisplay\").innerHTML = StopedMSG;\r\n        }\r\n    }\r\n\r\n    const upHandler = () =>{\r\n        if(document.getElementById(\"StatusDisplay\").innerHTML == StopedMSG){\r\n            if(bet + 5 <= props.getBalance()){\r\n                setBet(bet + 5);\r\n            }else{\r\n                setBet(props.getBalance());\r\n            }\r\n        }\r\n    }\r\n\r\n    const downHandler = ()=>{\r\n        if(document.getElementById(\"StatusDisplay\").innerHTML == StopedMSG){\r\n            if(bet - 5 < props.getBalance() && bet >= 5){\r\n                setBet(bet - 5);\r\n            }else{\r\n                setBet(0);\r\n            }\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className = \"SlotMachine\">\r\n            <div className = \"StatusDisplay\" id=\"StatusDisplay\">{StopedMSG}</div>\r\n            <div className =\"SlotMachineDisplay\">\r\n                <div className=\"SlotItem\">{display[0]%5}</div>\r\n                <div className=\"SlotItem\">{display[1]%5}</div>\r\n                <div className=\"SlotItem\">{display[2]%5}</div>\r\n\r\n            </div>\r\n            <div className =\"SlotButtons\">\r\n                <button className = \"SlotButton SlotStop glow-on-hover\" onClick={()=>stopHandler()}>STOP</button>\r\n                <div className = \"SlotButton SlotBet\" onClick={()=>downHandler()}>🡇</div>\r\n                <div className =\"SlotBetDisplay\">\r\n                    <div>{bet}$</div>    \r\n                </div>\r\n                <div className = \"SlotButton SlotBet\" onClick={()=>upHandler()}>🡅</div>\r\n                <button className = \"SlotButton SlotGo glow-on-hover\" onClick={()=>goHandler()}>LET'S GO</button>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    );\r\n    \r\n};\r\n\r\nexport { SlotMachine as default };","import React from 'react';\r\nimport \"./Styles.css\";\r\n\r\n\r\n\r\nconst Header = props =>{\r\n    if(props.user){\r\n        return(\r\n            <div className = \"Header\">\r\n                 <div className = \"CasinoName\">Royale Bet</div>\r\n                <div className = \"NameDisplay\">{props.user.name}</div>\r\n                <div className = \"BalanceDisplay\">{props.user.balance}$</div>\r\n                \r\n            </div>\r\n        );\r\n    }else{\r\n        return(\r\n            <div className = \"Header\">\r\n                <div className = \"CasinoName\">Royale Bet</div>\r\n                <div className = \"NameDisplay\">Player</div>\r\n                <div className = \"BalanceDisplay\">000000$</div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport { Header as default };","import React from 'react';\r\nimport \"./Styles.css\";\r\nimport { useState } from 'react';\r\n\r\n\r\n\r\nconst Login = props =>{\r\n    const [username,setUsername]=useState();\r\n    const [password,setPassword]=useState();\r\n    return(\r\n        <div className = \"Login\">\r\n            <div>\r\n                <div>\r\n                    <input className = \"input\" type=\"text\" placeholder=\"Username\" onChange={(event)=> setUsername(event.target.value) }/>\r\n                </div>\r\n                <div>\r\n                    <input className = \"input\" type=\"text\" placeholder=\"Password\" onChange={(event)=> setPassword(event.target.value)}/>\r\n                </div>\r\n                <div className = \"ButtonBox\">\r\n                    <button className = \"ButtonLog\" onClick={()=>props.LogInHandler(username,password)}>LogIn</button>\r\n                </div>\r\n                   \r\n                <div>\r\n                    <p className=\"message\">Not registered? <a href=\"#\" onClick={()=>props.RegisterHandler(username,password)}>Create an account</a></p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n    \r\n};\r\n\r\nexport { Login as default };","import React from 'react'\nimport \"./../Styles/Blackjack.css\";\n\nconst Card = (props) => {\n    return(\n        <div >\n            <img className=\"card\" src={props.src.image}/>\n        </div>\n    )\n}\n\nexport default Card;","import React from 'react'\nimport \"./../Styles/Blackjack.css\";\n\nconst Backcard = (props) => {\n    return(\n        <div >\n            <img className=\"backcard\" src={\"https://i.pinimg.com/originals/37/ea/b9/37eab97d28039f9c62d901900b2980cc.png\"}/>\n        </div>\n    )\n}\n\nexport default Backcard;","import React from 'react'\nimport Card from './Card'\nimport BackCard from './Backcard'\nimport \"./../Styles/Blackjack.css\";\n\nconst Dealer = (props) => {\n    return(\n        <div className=\"Dealer\">\n            {props.cardsD!==null ? \n                props.cardsD.map(result=>{\n                    if(props.cardsD.length !== 1){\n                        return( <Card key={result.code} src={result}/>)\n                    }else{\n                        return(\n                            <div>\n                                <Card key={result.code} src={result}/>\n                                <BackCard/>\n                            </div>\n                        )\n                    }\n                })                   \n                :\n                null\n            }\n        </div>\n    )\n}\n\nexport default Dealer;","import React from 'react'\nimport Card from './Card'\nimport \"./../Styles/Blackjack.css\";\n\nconst Player = (props) => {\n    return(\n        <div className=\"Player\">\n            {props.cardsP!==null ? props.cardsP.map(result=>{\n                return( <Card key={result.code} src={result}/>)}):\n                null\n            }\n        </div>\n    )\n}\n\nexport default Player;","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport Dealer from './Dealer'\nimport Player from './Player'\nimport \"./../Styles/Blackjack.css\";\n    \nconst Blackjack = (props) =>{\n\n\n    const endpoint = \"https://deckofcardsapi.com/api/deck/\"\n    const [balance, setBalance] = useState(50);\n    const [deck, setDeck] = useState(null);\n    const [cardsP, setCardsP] = useState(null);\n    const [valueP, setValueP] = useState(null);\n    const [cardsD, setCardsD] = useState(null);\n    const [valueD, setValueD] = useState(null);\n    const [status, setStatus] = useState(null);\n    const [softTokenD, setSoftTokenD] = useState(0);\n    const [softTokenP, setSoftTokenP] = useState(0); \n    const [foldFalg, setFoldFlag] = useState(1);\n    const [remaining, setRemaining] = useState(null);\n    const [bet, setBet] = useState(0);\n\n    const drawCard = type => {\n        axios.get(`${endpoint}${deck.deck_id}/draw/?count=1`)\n        .then(response => {\n            if(type===1){\n            if(cardsP===null){\n                setCardsP(response.data.cards);\n            }else{\n                if(valueP<21){\n                    let hand = cardsP;\n                    hand.push(response.data.cards[0]);\n                    setCardsP(hand);\n                }\n            }\n            }else{ \n            if(cardsD===null){\n                setCardsD(response.data.cards);\n            }else{\n                let hand = cardsD;\n                hand.push(response.data.cards[0]);\n                setCardsD(hand);\n            }\n            }\n            setRemaining(remaining-1);\n            check();\n        })\n    }\n\n    //CHANGE UPON DEPLOY\n    const getBalance = () => {\n        return parseInt(props.getBalance()) ;\n    }\n\n    const upHandler = () => {\n        if(cardsD===null && cardsP===null){\n        if(bet + 5 <= getBalance()){\n            setBet(bet + 5)\n        }else{\n            setBet(getBalance());\n        }\n        }\n    }\n\n    const downHandler = () => {\n        if(cardsD===null && cardsP===null){\n        if(bet - 5 <= getBalance() && bet >= 5){\n            setBet(bet - 5)\n        }else{\n            setBet(0);\n        }\n        }\n    }\n\n    const check = () => {\n        let tmpD = [];\n        let tmpP = [];\n        let dValue = 0;\n        let pValue = 0;\n        if(cardsD){\n        cardsD.map(card=>{\n            tmpD.push(card.value);\n        })\n        tmpD.map(val=>{\n            if(val===\"ACE\"){\n            dValue += 11;\n            }else if(val===\"QUEEN\" || val===\"JACK\" || val===\"KING\" || val===\"0\"){\n            dValue += 10\n            }else{\n            dValue += Number(val);\n            }\n        })\n        }\n        if(cardsP){\n        cardsP.map(card=>{\n            tmpP.push(card.value);\n        })\n        tmpP.map(val=>{\n            if(val===\"ACE\"){\n            pValue += 11;\n            }else if(val===\"QUEEN\" || val===\"JACK\" || val===\"KING\" || val===\"0\"){\n            pValue += 10\n            }else{\n            pValue += Number(val);\n            }\n        })\n        }\n        setValueD(dValue);\n        setValueP(pValue);\n        softChecker();\n    }\n\n    const dealergame = () => {\n        if(valueD<17 && valueP<22){\n            if(valueP === 21 && cardsP.length == 2){\n                win_lose_check();\n                setFoldFlag(1);\n            }else{\n                drawCard(0);\n            }\n        }else{\n            win_lose_check();\n            setFoldFlag(1);\n            setBet(0);\n        }\n    }\n\n    const softChecker = () => {\n        if(valueD>21){\n            cardsD.map(card=>{\n                if(card.value === \"ACE\"){\n                    if(softTokenD===0){\n                        setValueD(valueD-10);\n                        setSoftTokenD(1);\n                    }\n                }\n            })\n        }\n        if(valueP>21){\n        cardsP.map(card=>{\n            if(card.value === \"ACE\"){\n                if(softTokenP===0){\n                    setValueP(valueP-10);\n                    setSoftTokenP(1);\n                }\n            }\n        })\n        }\n        console.log(valueD)\n        console.log(valueP)\n    }\n\n    const startGame = () => {\n        if(!cardsP || !cardsD){\n        setStatus(null);\n        axios.get(`${endpoint}${deck.deck_id}/draw/?count=2`)\n            .then(response => {\n            setCardsP(response.data.cards);\n            })\n        \n            axios.get(`${endpoint}${deck.deck_id}/draw/?count=1`)\n            .then(response => {\n            setCardsD(response.data.cards);\n            })\n        setBalance(getBalance()-bet);\n        props.setBalance((getBalance()-bet).toString());\n        }\n        setRemaining(remaining-3);\n    }\n\n    const win_lose_check = () => {\n        if(valueP>21 && valueD>21){\n        console.log('YOU BOTH SUCKS')\n        }else if(valueP>valueD){\n        if(valueP>21){\n            console.log('YOU LOSE')\n            setStatus(\"YOU LOSE\")\n        }else{\n            console.log('YOU WIN')\n            setStatus(\"YOU WIN\")\n            props.setBalance((getBalance()+ bet*2).toString());\n            setBalance(getBalance()+ bet*2)\n        }\n        }else if(valueD>21 && valueP<21){\n        console.log('YOU WIN')\n        setStatus(\"YOU WIN\")\n        props.setBalance((getBalance()+ bet*2).toString());\n        setBalance(getBalance()+ bet*2)\n        }else if(valueD === valueP){\n            console.log(\"IT'S A TIE\")\n            setStatus(\"IT'S A TIE\")\n            props.setBalance((getBalance()+ bet).toString());\n            setBalance(getBalance()+ bet)\n        }else{\n        console.log('YOU LOSE')\n        setStatus(\"YOU LOSE\")\n        }\n        setValueD(null);\n        setValueP(null);\n        setCardsD(null);\n        setCardsP(null);\n        if(remaining <= 26){\n            gen_deck();\n        }\n    }\n\n    const gen_deck = () => {\n        axios.get(`${endpoint}new/shuffle/?deck_count=1`)\n        .then(response => {\n            setDeck(response.data);\n            setRemaining(response.data.remaining);\n        })\n        console.log(\"GENERATING DECK\")\n    }\n\n    const log = () => {\n        console.log(deck);\n        console.log(cardsP);\n        console.log(cardsD);\n        console.log(valueP);\n        console.log(valueD);\n    }\n\n    if(deck===null){\n        return (\n        <div className=\"Button\" onClick={gen_deck()}>\n            GENERATING NEW DECK\n        </div>\n        );\n    }else{\n        return(\n        <div>\n        <div className=\"login-page\">\n            <div className=\"form\">\n                {bet===0?\n                    <p>\n                        YOU MUST BET IN ORDER TO PLAY\n                    </p>\n                    :\n                    <button onClick={()=>startGame()}>\n                        ROUND START\n                    </button>\n                }\n                <p type=\"text\" >ACTUAL BET: {bet}$</p>\n                <div className=\"betContainer\">\n                    <button  className=\"bet\" onClick={() => upHandler()}>\n                        ▲\n                    </button>\n                    <button className=\"bet\" onClick={()=>downHandler()}>\n                        ▼\n                    </button>\n                </div>\n            </div>\n            <Dealer drawCard={drawCard} cardsD={cardsD}/>\n            {cardsP!==null && cardsD!==null?  \n            <div className=\"control\">       \n                <div  onClick={()=>dealergame()}>\n                {foldFalg === 1 ? \n                    <div>\n                        <button onClick={()=>setFoldFlag(0)}>FOLD</button>\n\n                    </div>\n                    : \n                    <button>OK</button>}\n                </div>\n                {foldFalg === 1 ?\n                    <button onClick={()=>drawCard(1)}>DRAW</button> \n                    :\n                    null\n                }\n                <div className=\"cooltext\">\n                    <p>\n                        DEALER WILL STOP AT 17 OR HIGHER\n                    </p>\n                    <p>\n                        ACES ARE ALWAYS 11\n                    </p>\n                </div>\n            </div>\n            : null}\n            <Player drawCard={drawCard} cardsP={cardsP}/>\n        </div>\n        </div>\n        )\n    }\n}\n\nexport default Blackjack;","import React from 'react';\r\nimport { useState } from 'react';\r\nimport \"./Styles/Roulette.css\"\r\nconst Roulette = props =>{\r\n\r\n    let rep =  0;\r\n    const values = [\"X2\", \"1/2\", \"BREAKDOWN\", \"JACKPOT\", \"NOTHING\",\" \"];\r\n    const [count, setCount] = useState(5);\r\n\r\n    const sleep = (milliseconds) => {\r\n        return new Promise(resolve => setTimeout(resolve, milliseconds))\r\n    }\r\n\r\n    const spin = () => {\r\n        setCount(5);\r\n        const tmp = Math.floor(Math.random()*10);\r\n        if(tmp === 0 || tmp === 7){\r\n            setCount(0);\r\n            props.setBalance(props.getBalance() * 2)\r\n        }else if(tmp ===1 || tmp===8){\r\n            setCount(1);\r\n            props.setBalance(props.getBalance() / 2)\r\n        }else if(tmp===2 || tmp ===4 ||tmp===9){\r\n            setCount(4);\r\n        }else if(tmp === 3 || tmp === 6){\r\n            setCount(2);\r\n            props.setBalance(0)\r\n        }else{\r\n            setCount(3);\r\n            props.setBalance(props.getBalance() * 5)\r\n        }\r\n\r\n    }\r\n\r\n    return(\r\n        <div className=\"RTgameContainer\">\r\n            <div className=\"RoulleteContainer\">\r\n                <img src={\"https://raw.githubusercontent.com/DKbyo/react-native-roulette-casino-demo/master/images/wheel.png\"} className=\"RoulleteIMG\"/>\r\n                <div className=\"RouletteText\">\r\n                        {values[count]}\r\n                </div>                    \r\n            </div>\r\n            <button className=\"RouletteButton glow-rt\" onClick={()=>spin()}>Spin</button>\r\n        </div>\r\n    );\r\n\r\n    }\r\n\r\nexport { Roulette as default };","import React from 'react';\r\nimport \"./Styles.css\";\r\nimport { useState } from 'react';\r\nimport SlotMachine from './SlotMachine';\r\nimport BlackJack from './blackjack/Blackjack'\r\nimport Roulette from \"./Roulette\"\r\nconst Menu = props =>{\r\n    const [game,setGame] =useState(\"\");\r\n    \r\n    if(game === \"\"){\r\n    return(\r\n        <div className = \"Menu\">\r\n            <div className = \"Games\">\r\n                <div className=\"Game\">\r\n                    <div className = \"SM shine\" onClick={()=>setGame(\"SM\")}></div>\r\n                </div>\r\n                <div className=\"Game\">\r\n                    <div class = \"BJ shine\" onClick={()=>setGame(\"BJ\")}></div>\r\n                </div>\r\n                <div className=\"Game\" >\r\n                    <div className = \"R shine\" onClick={()=>setGame(\"R\")}></div>\r\n                </div>\r\n\r\n            \r\n            </div>\r\n            <button className = \"ButtonLog Add\" onClick={()=>props.addBalanceHandler()}>Add Founds</button>\r\n            <button className = \"ButtonLog Logout\" onClick={()=>props.LogOutHandler()}>LogOut</button>\r\n\r\n        </div>\r\n    );\r\n    }else if(game ===\"SM\"){\r\n        return(\r\n            <div className = \"GameScreen\">\r\n                <button className = \"ButtonLog back\" onClick={()=>setGame(\"\")}></button>\r\n                <SlotMachine getBalance = {props.getBalance} setBalance={props.setBalance}></SlotMachine>\r\n            </div>\r\n        );\r\n        \r\n    }else if(game==\"BJ\"){\r\n        return(\r\n        <div className = \"GameScreen\">\r\n            <button className = \"ButtonLog back\" onClick={()=>setGame(\"\")}></button>\r\n            <BlackJack getBalance = {props.getBalance} setBalance={props.setBalance}></BlackJack>\r\n        </div>\r\n        );\r\n    }else if(game==\"R\"){\r\n        return(\r\n            <div className = \"GameScreen\">\r\n                <button className = \"ButtonLog back\" onClick={()=>setGame(\"\")}></button>\r\n                <Roulette getBalance = {props.getBalance} setBalance={props.setBalance}></Roulette>\r\n            </div>\r\n        );\r\n    }else{\r\n        return(\r\n            <div className = \"GameScreen\">\r\n                <button className = \"ButtonLog back\" onClick={()=>setGame(\"\")}></button>\r\n                <div>Error</div>\r\n            </div>\r\n\r\n        );\r\n\r\n    }\r\n\r\n\r\n};\r\n\r\nexport { Menu as default };","import React, { useState } from 'react';\nimport './App.css';\n\nimport SlotMachine from './Components/SlotMachine';\nimport Header from './Components/Header';\nimport Login from './Components/Login';\nimport Menu from './Components/Menu'\nfunction App() {\n\n  const [usersData,setUsersData] = useState([]);\n  const [token,setToken] = useState(\"\");\n  const [currentUser,setCurrentUser] = useState(undefined);\n  \n  \n  const LogInHandler = (Username,Password) =>{\n    if(Username !== undefined && Password !== undefined){\n      const user = usersData.find(elememt => elememt.name === Username );\n      if(user!==undefined){\n        if(user.password === Password){\n          //TODO generate random token\n          setToken(\"random token\");\n          user.token = \"random token\";\n          setCurrentUser(user);\n        }else{\n          console.log(\"password incorrect\");\n          alert(\"password incorrect\");\n        }\n      }else{\n        console.log(\"user does not exits\");\n        alert(\"user does not exits\");\n      }\n    }else{\n      console.log(\"invalid input\");\n      alert(\"invalid input\");\n    }\n  }  \n\n  const RegisterHandler = (Username,Password) =>{\n  //TODO\n    //check data validity\n    if(Username !== undefined && Password !== undefined){\n          //not the same twice\n          if(usersData.find(elememt => elememt.name === Username ) === undefined){\n            const data = usersData;\n            const newData = [...data,{name:Username,password:Password,balance:\"50\",token:\"\"}];\n            setUsersData(newData);\n            alert(\"New User \"+Username +\" Created\")\n          }else{\n            console.log(\"Username Alredy taken\")\n            alert(\"Username Alredy taken\");\n          }\n    }else{\n      console.log(\"invalid input\")\n      alert(\"invalid input\");\n    }\n  }  \n  \n  const LogOutHandler = ()=>{\n    setToken(\"\");\n    const user = usersData.find(elememt => elememt.token === token );\n    user.token = \"\";\n    setCurrentUser();\n  }\n\n  const setBalance =(balance)=>{\n    //TO-DO some securty stuff negatives and stuff\n    if(currentUser){\n      const user = usersData.find(elememt => elememt.token === token );\n      user.balance = balance;\n      setCurrentUser({...user});\n      \n    }\n  }\n\n  const addBalanceHandler = () =>{\n    alert(\"This will set your balance to a flat 50$\");\n    setBalance(\"50\");\n  }\n\n\n  const getBalance = () =>{\n    if(currentUser){\n      return (currentUser.balance);\n    }else{\n      return(\"-1\");\n    }\n  }\n\n  if(currentUser){\n    return (\n      <div className=\"App\">\n        <Header user={currentUser}/>\n        <Menu LogOutHandler = {LogOutHandler} setBalance={setBalance} getBalance={getBalance} addBalanceHandler={addBalanceHandler}/>\n        <iframe className=\"Video\" width=\"560\" height=\"315\" src=\"https://www.youtube-nocookie.com/embed/9wh8FgsEtNQ\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n      </div>\n    );\n  }else{    \n    return (\n      <div className=\"App\">\n        <Header />\n        <Login LogInHandler={LogInHandler} RegisterHandler={RegisterHandler}/>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}